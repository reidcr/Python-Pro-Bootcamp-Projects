from tkinter import *
from tkinter import messagebox
from random import choice, randint, shuffle
import pyperclip
import json

WIDTH = 200
HEIGHT = 200
PASSWORDWIDTH = 14
ADDWIDTH = 36
ENTRYWIDTH1 = 21
ENTRYWIDTH2 = 35


# ---------------------------- PASSWORD GENERATOR ------------------------------- #
def generate_password():
    """randomly generates a password and copies to clipboard"""
    letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u',
               'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P',
               'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']
    numbers = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']
    symbols = ['!', '#', '$', '%', '&', '(', ')', '*', '+']

    nr_letters = randint(8, 10)
    nr_symbols = randint(2, 4)
    nr_numbers = randint(2, 4)

    password_letters = [choice(letters) for _ in range(nr_letters)]
    password_symbols = [choice(symbols) for _ in range(nr_symbols)]
    password_numbers = [choice(numbers) for _ in range(nr_numbers)]

    password_list = password_letters + password_symbols + password_numbers
    shuffle(password_list)

    password = "".join(password_list)
    password_entry.insert(0, password)
    pyperclip.copy(password)


# ---------------------------- SAVE PASSWORD ------------------------------- #

def save():
    """saves new password to file"""
    website = website_entry.get()
    email = email_entry.get()
    password = password_entry.get()
    new_data = {
        website: {
            "email": email,
            "password": password,
        }
    }

    if len(website) == 0 or len(password) == 0:
        messagebox.showinfo(title="Oops", message="Please don't leave any fields empty!")
    else:
        try:
            with open("saved_passwords.json", mode="r") as password_list:
                data = json.load(password_list)
        except FileNotFoundError:
            with open("saved_passwords.json", mode="w") as password_list:
                json.dump(new_data, password_list, indent=4)
        else:
            data.update(new_data)
            with open("saved_passwords.json", mode="w") as password_list:
                json.dump(data, password_list, indent=4)
        finally:
            website_entry.delete(0, END)
            email_entry.delete(0, END)
            email_entry.insert(0, "reidcr@gmail.com")
            password_entry.delete(0, END)


# ----------------------- SEARCH FOR PASSWORD ------------------------- #

def find_password():
    """Searches for password in user file"""
    try:
        with open("saved_passwords.json", mode="r") as password_list:
            data = json.load(password_list)
    except FileNotFoundError:
        messagebox.showinfo(title="Error", message="File not found.")
    else:
        query = website_entry.get()
        if query in data:
            messagebox.showinfo(title=query, message=f"Email: {data[query]['email']}\n"
                                                     f"Password: {data[query]['password']}")
        else:
            messagebox.showinfo(title="Error", message=f"No details for {query} exists.")


# ---------------------------- UI SETUP ------------------------------- #

window = Tk()
window.title("Password Manager")
window.config(padx=20, pady=20)

canvas = Canvas(width=WIDTH, height=HEIGHT)
lock_img = PhotoImage(file="logo.png")
canvas.create_image(WIDTH / 2, HEIGHT / 2, image=lock_img)
canvas.grid(column=1, row=0)

# Labels
website_label = Label(text="Website:")
website_label.grid(column=0, row=1)
email_label = Label(text="Email/Username:")
email_label.grid(column=0, row=2)
password_label = Label(text="Password:")
password_label.grid(column=0, row=3)

# Entries
website_entry = Entry(width=ENTRYWIDTH1)
website_entry.grid(column=1, row=1)
website_entry.focus()
email_entry = Entry(width=ENTRYWIDTH2)
email_entry.grid(column=1, row=2, columnspan=2)
email_entry.insert(0, "reidcr@gmail.com")
password_entry = Entry(width=ENTRYWIDTH1)
password_entry.grid(column=1, row=3)

# Buttons
password_button = Button(text="Generate Password", width=PASSWORDWIDTH, command=generate_password)
password_button.grid(column=2, row=3)
add_button = Button(text="Add", width=ADDWIDTH, command=save)
add_button.grid(column=1, row=4, columnspan=2)
search_button = Button(text="Search", width=PASSWORDWIDTH, command=find_password)
search_button.grid(column=2, row=1)

window.mainloop()
