# main.py

from flask import Flask, render_template, redirect, url_for, request
from flask_bootstrap import Bootstrap
from flask_sqlalchemy import SQLAlchemy
from flask_wtf import FlaskForm
from wtforms import StringField, SubmitField
from wtforms.validators import DataRequired
import requests
import os

app = Flask(__name__)
app.config['SECRET_KEY'] = os.environ['SECRET_KEY']
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///movie-collection.db'
db = SQLAlchemy(app)
Bootstrap(app)
API_KEY = os.environ['API_KEY']
API_TOKEN = os.environ['API_TOKEN']

movie_parameters = {
    "query": "",
    "include_adult": True,
    "language": "en-US"
}

movie_headers = {
    "accept": "application/json",
    "Authorization": f"Bearer {API_TOKEN}"
}

movie_title_url = "https://api.themoviedb.org/3/search/movie"
movie_id_url = "https://api.themoviedb.org/3/movie/"


class RateMovieForm(FlaskForm):
    new_rating = StringField("Your Rating Out of 10 e.g. 7.5", validators=[DataRequired()])
    new_review = StringField("Your Review", validators=[DataRequired()])
    submit = SubmitField("Done")


class AddMovieForm(FlaskForm):
    new_title = StringField("Movie Title", validators=[DataRequired()])
    submit = SubmitField("Add Movie")


class Movie(db.Model):
    id = db.Column('movie_id', db.Integer, primary_key=True)
    title = db.Column('title', db.String, nullable=False, unique=True)
    year = db.Column('year', db.Integer, nullable=False)
    description = db.Column('description', db.String, nullable=False)
    rating = db.Column('rating', db.Float)
    ranking = db.Column('ranking', db.Integer)
    review = db.Column('review', db.String)
    img_url = db.Column('img_url', db.String, nullable=False)


def __init__(self, title, year, description, rating, ranking, review, img_url):
    self.title = title
    self.year = year
    self.description = description
    self.rating = rating
    self.ranking = ranking
    self.review = review
    self.img_url = img_url


@app.route("/")
def home():
    with app.app_context():
        db.create_all()
        movies = Movie.query.order_by(Movie.rating.asc()).all()
        num_movies = len(movies)
        for movie in movies:
            movie.ranking = num_movies
            num_movies = num_movies - 1
    return render_template("index.html", movies=movies)


@app.route("/edit/<int:index>", methods=['GET', 'POST'])
def edit(index):
    if request.method == 'POST':
        with app.app_context():
            movie_to_update = db.session.execute(db.select(Movie).where(Movie.id == index)).scalar()
            movie_to_update.rating = request.form['new_rating']
            movie_to_update.review = request.form['new_review']
            db.session.commit()
        return redirect(url_for('home'))
    return render_template("edit.html", form=RateMovieForm())


@app.route("/delete/<int:index>")
def delete(index):
    movie_to_delete = Movie.query.get(index)
    db.session.delete(movie_to_delete)
    db.session.commit()
    return redirect(url_for('home'))


@app.route("/find_movie/<int:movie_id>")
def find_movie(movie_id):
    # print(movie_id)
    movie_id_response = requests.get(url=f"{movie_id_url}{movie_id}", headers=movie_headers)
    movie_id_response.raise_for_status()
    movie_data = movie_id_response.json()
    new_movie = Movie(
        title=movie_data['original_title'],
        year=movie_data['release_date'],
        description=movie_data['overview'],
        img_url=f"https://image.tmdb.org/t/p/w500/{movie_data['poster_path']}"
    )
    with app.app_context():
        db.create_all()
        db.session.add(new_movie)
        db.session.commit()
    movie_index = db.session.execute(db.select(Movie).where(Movie.title == movie_data['original_title'])).scalar().id
    return redirect(url_for('edit', index=movie_index))


@app.route("/add", methods=["GET", "POST"])
def add():
    if request.method == 'POST':
        movie_parameters['query'] = request.form['new_title']
        movie_title_response = requests.get(url=movie_title_url, params=movie_parameters, headers=movie_headers)
        movie_title_response.raise_for_status()
        movie_title_data = movie_title_response.json()
        return render_template("select.html", movie_list=movie_title_data['results'])
    return render_template("add.html", form=AddMovieForm())


if __name__ == '__main__':
    app.run(debug=True)


# edit.html

{% extends 'bootstrap/base.html' %}
{% import "bootstrap/wtf.html" as wtf %}

{% block styles %}
  {{ super() }}
  <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Nunito+Sans:300,400,700">
  <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Poppins:300,400,700">
  <link rel="stylesheet" href="{{ url_for('static', filename='css/styles.css') }}">
{% endblock %}

{% block title %}Edit Movies{% endblock %}

{% block content %}
<div class="content">
  <h1 class="heading">Movie Title</h1>
    <p class="description">Edit Movie Rating</p>
     {{ wtf.quick_form(form, novalidate='True') }}
  </div>
{% endblock %}

# select.html

{% extends 'bootstrap/base.html' %}
{% import "bootstrap/wtf.html" as wtf %}

{% block styles %}
  {{ super() }}
  <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Nunito+Sans:300,400,700">
  <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Poppins:300,400,700">
  <link rel="stylesheet" href="{{ url_for('static', filename='css/styles.css') }}">
{% endblock %}

{% block title %}Select Movie{% endblock %}

{% block content %}
<div class="container">
    <h1 class="heading">Select Movie</h1>
  {% for movie in movie_list %}
  <p>
    <a href=" {{ url_for('find_movie', movie_id=movie['id']) }}"> {{ movie['original_title'] }} - {{ movie['release_date'] }} </a>
  </p>
  {% endfor %}

</div>
{% endblock %}

# add.html

{% extends 'bootstrap/base.html' %}
{% import "bootstrap/wtf.html" as wtf %}

{% block styles %}
  {{ super() }}
  <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Nunito+Sans:300,400,700">
  <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Poppins:300,400,700">
  <link rel="stylesheet" href="{{ url_for('static', filename='css/styles.css') }}">
{% endblock %}

{% block title %}Add Movie{% endblock %}

{% block content %}
<div class="content">
    <h1 class="heading">Add a Movie</h1>
    {{ wtf.quick_form(form, novalidate='True') }}
</div>
{% endblock %}

# index.html

{% extends 'bootstrap/base.html' %}

{% block styles %}
  {{ super() }}
  <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Nunito+Sans:300,400,700">
  <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Poppins:300,400,700">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Poppins:300,400,700">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.14.0/css/all.min.css" integrity="sha512-1PKOgIY59xJ8Co8+NE6FZ+LOAZKjy+KY8iq0G4B3CyeY6wYHN3yt9PW0XpSriVlkMXe40PTKnXrLnZ9+fkDaog==" crossorigin="anonymous" />
  <link rel="stylesheet" href="{{ url_for('static', filename='css/styles.css') }}">
{% endblock %}

{% block title %}My Top 10 Movies{% endblock %}

{% block content %}
<div class="container">
  <h1 class="heading">My Top 10 Movies</h1>
  <p class="description">These are my all time favourite movies.</p>
    {% if movies|length > 0 %}
      {% for movie in movies %}
      <div class="card" >
        <div class="front" style="background-image: url({{ movie.img_url }}); height: 125%">
            <p class="large">{{ movie.ranking }}</p>
        </div>
        <div class="back">
          <div>
        <div class="title">{{ movie.title }} <span class="release_date">({{ movie.year }})</span></div>
            <div class="rating">
                <label>{{ movie.rating }}</label>
              <i class="fas fa-star star"></i>
            </div>
              <p class="review">{{ movie.review }}</p>
            <p class="overview">
                {{ movies[0].description }}
            </p>

            <a href=" {{ url_for('edit', index=movie.id) }} " class="button">Update</a>
            <a href=" {{ url_for('delete', index=movie.id) }}" class="button delete-button">Delete</a>

          </div>
        </div>
      </div>
      <br><br><br>
      {% endfor %}
    {% endif %}
</div>
<div class="container text-center add">
<a href=" {{ url_for('add') }} " class="button">Add Movie</a>
</div>

{% endblock %}

# styles.css

*, *:before, *:after {
	 box-sizing: border-box;
}
 html {
	 font-size: 18px;
	 line-height: 1.5;
	 font-weight: 300;
	 color: #333;
	 font-family: "Nunito Sans", sans-serif;
}
 body {
	 margin: 0;
	 padding: 0;
	 height: 100vh;
	 background-color: #ecf0f9;
	 background-attachment: fixed;
}
.large {
     font-size: 3rem;
}
.content {
	 display: flex;
	 margin: 0 auto;
	 justify-content: center;
	 align-items: center;
	 flex-wrap: wrap;
	 max-width: 1500px;
}
 p.overview {
	 font-size: 12px;
	 height: 200px;
	 width: 100%;
	 overflow: hidden;
	 text-overflow: ellipsis;
}
 .heading {
	 width: 100%;
	 margin-left: 1rem;
	 font-weight: 900;
	 font-size: 1.618rem;
	 text-transform: uppercase;
	 letter-spacing: 0.1ch;
	 line-height: 1;
	 padding-bottom: 0.5em;
	 margin-bottom: 1rem;
	 position: relative;
}
 .heading:after {
	 display: block;
	 content: '';
	 position: absolute;
	 width: 60px;
	 height: 4px;
	 background: linear-gradient(135deg, #1a9be6, #1a57e6);
	 bottom: 0;
}
 .description {
	 width: 100%;
	 margin-top: 0;
	 margin-left: 1rem;
	 margin-bottom: 3rem;
}
 .card {
	 color: inherit;
	 cursor: pointer;
	 width: calc(33% - 3rem);
	 min-width: calc(33% - 3rem);
	 height: 400px;
	 min-height: 400px;
	 perspective: 1000px;
	 margin: 1rem auto;
	 position: relative;
}
 @media screen and (max-width: 800px) {
	 .card {
		 width: calc(50% - 3rem);
	}
}
 @media screen and (max-width: 500px) {
	 .card {
		 width: 100%;
	}
}
 .front, .back {
	 display: flex;
	 border-radius: 6px;
	 background-position: center;
	 background-size: cover;
	 text-align: center;
	 justify-content: center;
	 align-items: center;
	 position: absolute;
	 height: 100%;
	 width: 100%;
	 -webkit-backface-visibility: hidden;
	 backface-visibility: hidden;
	 transform-style: preserve-3d;
	 transition: ease-in-out 600ms;
}
 .front {
	 background-size: cover;
	 padding: 2rem;
	 font-size: 1.618rem;
	 font-weight: 600;
	 color: #fff;
	 overflow: hidden;
	 font-family: Poppins, sans-serif;
}
 .front:before {
	 position: absolute;
	 display: block;
	 content: '';
	 top: 0;
	 left: 0;
	 right: 0;
	 bottom: 0;
	 background: linear-gradient(135deg, #1a9be6, #1a57e6);
	 opacity: 0.25;
	 z-index: -1;
}
 .card:hover .front {
	 transform: rotateY(180deg);
}
 .card:nth-child(even):hover .front {
	 transform: rotateY(-180deg);
}
 .back {
	 background: #fff;
	 transform: rotateY(-180deg);
	 padding: 0 2em;
}
 .card:hover .back {
	 transform: rotateY(0deg);
}
 .card:nth-child(even) .back {
	 transform: rotateY(180deg);
}
 .card:nth-child(even):hover .back {
	 transform: rotateY(0deg);
}
 .button {
	 transform: translateZ(40px);
	 cursor: pointer;
	 -webkit-backface-visibility: hidden;
	 backface-visibility: hidden;
	 font-weight: bold;
	 color: #fff;
	 padding: 0.5em 1em;
	 border-radius: 100px;
	 font: inherit;
	 background: linear-gradient(135deg, #1a9be6, #1a57e6);
	 border: none;
	 position: relative;
	 transform-style: preserve-3d;
	 transition: 300ms ease;
}
 .button:before {
	 transition: 300ms ease;
	 position: absolute;
	 display: block;
	 content: '';
	 transform: translateZ(-40px);
	 -webkit-backface-visibility: hidden;
	 backface-visibility: hidden;
	 height: calc(100% - 20px);
	 width: calc(100% - 20px);
	 border-radius: 100px;
	 left: 10px;
	 top: 16px;
	 box-shadow: 0 0 10px 10px rgba(26, 87, 230, 0.25);
	 background-color: rgba(26, 87, 230, 0.25);
}

.button.delete-button {
	 background-color: rgba(230, 87, 230, 0.25);
	 background: linear-gradient(135deg, #e61a46, #e61a1a);
}
.button.delete-button:before {
	 background-color: rgba(230, 87, 230, 0.25);
	 box-shadow: 0 0 10px 10px rgba(230, 87, 230, 0.25);
}
 .button:hover {
	 transform: translateZ(55px);
}
 .button:hover:before {
	 transform: translateZ(-55px);
}
 .button:active {
	 transform: translateZ(20px);
}
 .button:active:before {
	 transform: translateZ(-20px);
	 top: 12px;
	 top: 12px;
}
.container.add {
    margin-top: 40px;
    margin-bottom: 20px;
}
.rating {
    color: #E4BB23;
}
.review {
    font-style: italic;
}
 .movie_gens {
	 font-size: 11.5px;
}
 .title {
	 font-weight: bold;
}
 .release_date {
	 font-weight: normal;
}
